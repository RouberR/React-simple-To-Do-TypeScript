{"version":3,"sources":["components/Navbar.tsx","pages/AboutPage.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodoPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","to","AboutPage","TodoForm","addHandler","useState","title","setTitle","onChange","e","target","value","type","id","placeholder","onKeyPress","key","htmlFor","TodoList","todos","onToggle","onRemove","length","map","todo","classes","completed","push","join","checked","bind","onClick","preventDefault","removeHandler","TodoPage","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","window","confirm","filter","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.965a60be.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport const Navbar: FC = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper cyan accent-2 px1\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          React + TypeScript To-do\r\n        </Link>\r\n        <ul className=\"right hide-on-med-and-down\">\r\n          <li>\r\n            <Link to=\"/\">Список дел</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">Информация</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const AboutPage: FC = () => {\r\n    return (\r\n        <div>\r\n            <h1>Страница информации:</h1>\r\n            <p>React, TypeScript, UI materializecss, React-router-dom</p>\r\n            <Link to=\"/\"><button className=\"btn\">Обратно к списку дел</button></Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, { FC, useState } from \"react\";\r\n\r\ntype TodoFormType = {\r\n  addHandler(title: string): void;\r\n};\r\n\r\nexport const TodoForm: FC<TodoFormType> = ({ addHandler }) => {\r\n  const [title, setTitle] = useState<string>(\"\");\r\n\r\n  const onChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const keyPressHander = (e: React.KeyboardEvent) => {\r\n    if (e.key === \"Enter\") {\r\n      addHandler(title);\r\n      setTitle(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-field  mt2\">\r\n      <input\r\n        onChange={onChangeTitle}\r\n        value={title}\r\n        type=\"text\"\r\n        id=\"title\"\r\n        placeholder=\"Введите название дела\"\r\n        onKeyPress={keyPressHander}\r\n      />\r\n      <label htmlFor=\"title\" className=\"active\">\r\n        Введите название дела\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { ITodo } from \"../interfaces\";\r\n\r\ntype TodoListType = {\r\n  todos: ITodo[];\r\n  onToggle(id: number): void;\r\n  onRemove(id: number): void;\r\n};\r\n\r\nexport const TodoList: FC<TodoListType> = ({ todos, onToggle, onRemove }) => {\r\n  if (todos.length === 0) {\r\n    return <h3 className=\"center\">У вас нет задач!</h3>;\r\n  }\r\n\r\n  const removeHandler = (e: React.MouseEvent, id: number) => {\r\n    e.preventDefault();\r\n\r\n    onRemove(id);\r\n  };\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => {\r\n        const classes = [\"todo\"];\r\n        if (todo.completed) {\r\n          classes.push(\"completed\");\r\n        }\r\n        return (\r\n          <li key={todo.id} className={classes.join(\" \")}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={onToggle.bind(null, todo.id)}\r\n              />\r\n              <span>{todo.title}</span>\r\n              <i\r\n                className=\"material-icons red-text\"\r\n                onClick={(e) => removeHandler(e, todo.id)}\r\n              >\r\n                delete\r\n              </i>\r\n            </label>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React, { useState, useEffect, FC } from \"react\";\r\nimport { TodoForm } from \"../components/TodoForm\";\r\nimport { TodoList } from \"../components/TodoList\";\r\nimport { ITodo } from \"../interfaces\";\r\n\r\nexport const TodoPage: FC = () => {\r\n    const [todos, setTodos] = useState<ITodo[]>([]);\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem(\"todos\") || \"[]\") as ITodo[];\r\n    setTodos(saved);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  const addHandler = (title: string) => {\r\n    const newTodo: ITodo = {\r\n      title: title,\r\n      id: Date.now(),\r\n      completed: false,\r\n    };\r\n    // setTodos([newTodo, ...todos])\r\n    setTodos((prev) => [newTodo, ...prev]);\r\n  };\r\n\r\n  const toggleHandler = (id: number) => {\r\n    setTodos((prev) =>\r\n      prev.map((todo) => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed,\r\n          };\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeHandler = (id: number) => {\r\n    const shoudRemove = window.confirm(\r\n      \"Вы уверены что хотите удалить элемент?\"\r\n    );\r\n    if (shoudRemove) {\r\n      setTodos((prev) => prev.filter((todo) => todo.id !== id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TodoForm addHandler={addHandler} />\r\n\r\n      <TodoList\r\n        onRemove={removeHandler}\r\n        onToggle={toggleHandler}\r\n        todos={todos}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","\nimport { Navbar } from \"./components/Navbar\";\nimport { AboutPage } from \"./pages/AboutPage\";\nimport { TodoPage } from \"./pages/TodoPage\";\nimport {BrowserRouter, Route, Routes } from \"react-router-dom\"\n\n\nfunction App() {\n  \n  return (\n    <BrowserRouter>\n     <Navbar />\n     <div className=\"container\">\n\n      <Routes>\n      <Route path=\"/\" element={<TodoPage/>}/>\n      <Route path=\"/about\" element={<AboutPage/>}/>\n      <Route path=\"/*\" element={<h1>Неверный URL адрес</h1>}/>\n     </Routes>\n\n     </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}